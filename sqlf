
###############################################################################
#                                                                             #
#  Lout @SQL package for formatting SQL programs (Version 1.0)                #
#                                                                             #
#  Version 1.0 by Fernando Raya.                                              #
#  Based on Pas file by Jeffrey H. Kingston, 22 December 1992.                #
#                                                                             #
#  Reference:                                                                 #
#      https://en.wikipedia.org/wiki/SQL_reserved_words                       #
#                                                                             #
#  See LICENSE file                                                           #
#                                                                             #
###############################################################################

export	"0" "1" "2" "3" "4" "5" "6" "7" "8" "9"
	"." "," ":" ";" "'" "`" "+" "-" "*" "/" "(" ")"
	"[" "]" "^" ".." "=" "<" ">" "<>" "<=" ">=" ":="

	abort abortsession abs absolute access accessible access_lock account
	acos acosh action add add_months admin after aggregate alias all
	allocate allow alter alterand amp analyse and ansidate any
	are array array_agg array_exists array_max_cardinality as asc
	asensitive asin asinh assertion associate asutime asymmetric at atan
	atantwo atanh atomic audit authorization aux auxiliary ave average avg

	backup before begin begin_frame begin_partition between bigint binary
	bit blob boolean both breadth break browse bt bufferpool bulk but by
	byte byteint bytes

	call called capture cardinality cascade cascaded case casespecific
	case_n cast catalog ccsid cd ceil ceiling change char chartwohexint
	character characters character_length chars char_length check
	checkpoint class classifier clob clone close cluster clustered cm
	coalesce collate collation collect collection collid column
	column_value comment commit completion compress compute concat
	concurrently condition connect connection constraint constraints
	constructor contains containstable content continue convert
	convert_table_header copy corr corresponding cos cosh count
	covar_pop covar_samp create cross cs csum ct cube cume_dist current
	current_catalog current_date current_default_transform_group
	current_lc_type current_path current_role current_row current_schema
	current_server current_time current_timestamp current_timezone
	current_transform_group_for_type current_user currval cursor cv
	cycle 

	data database databases datablocksize date dateform day days
	day_hour day_microsecond day_minute day_second dbcc dbinfo
	deallocate dec decfloat decimal declare default deferrable
	deferred define degrees del delayed delete delimiter dense_rank deny
	depth deref desc describe descriptor destroy destructor
	deterministic diagnostic diagnostics dictionary disable
	disallow disconnect disk distinct distinctrow distributed
	div do document domain double drop dssize dual dump dynamic

	each echo editproc element else elseif empty enabled enclosed
	encoding encryption end end_exec ending end_frame end_partition
	eq equals erase errlvl error errorfiles errortables escape
	escaped et every except exception exclusive exec execute exists
	exit exp explain external extract

	fallback false fastexport fenced fetch fieldproc file fillfactor
	filter final first first_value float floor for force foreign
	format found frame_row free freespace freetext freetexttable
	freeze from full fulltext function fusion

	ge general generated get give global go goto grant graphic
	group grouping groups gt

	handler hash hashamp hashbakamp hashbucket hashrow having help
	high_priority hold holdlock host hour hours hour_microsecond
	hour_minute hour_second

	if ignore ilike immediate in inclusive inconsistent increment
	index indicator infile inherit initial initialize initially
	initiate inner inout input ins insensitive insert instead int
	integer integerdate intersect intersection interval into
	io_after_gtids io_before_gtids is isnull isobid isolation
	iterate

	key

	not null

	primary
	
	select

	table

	@Com

def @Sql
   body @Body
@Begin

    def @R right x { Base @Font x }
    def @B right x { Bold @Font x }
    def @S right x { { Symbol Base } @Font x }
    def @Keyword right x { @B x }

    def "0"	                     { @R "0"			 }
    def "1"			     { @R "1"			 }
    def "2"			     { @R "2"			 }
    def "3"			     { @R "3"			 }
    def "4"			     { @R "4"			 }
    def "5"			     { @R "5"			 }
    def "6"			     { @R "6"			 }
    def "7"			     { @R "7"			 }
    def "8"			     { @R "8"			 }
    def "9"			     { @R "9"			 }
    def "."			     { @R "."			 }
    def ","			     { @R ","			 }
    def ":"			     { @R ":"			 }
    def ";"			     { @R ";"			 }
    def "'"			     { @R "'"			 }
    def "`"			     { @R "`"			 }
    def "+"			     { @S "+"			 }
    def "-"			     { @S "-"			 }
    def "*"			     { @S @Char "asteriskmath"	 }
    def "/"			     { @R @Char "fraction"	 }
    def "("			     { @R "("			 }
    def ")"			     { @R ")"			 }
    def "["			     { @R "["			 }
    def "]"			     { @R "]"			 }
    def "^"			     { @S 0.8f @Font @Char "arrowup"	}
    def ".."			     { @R ".." &0.1f		 }
    def "="			     { @S @Char "equal"		 }
    def "<"			     { @S @Char "less"		 }
    def ">"			     { @S @Char "greater"	 }
    def "<>"			     { @S @Char "notequal"	 }
    def "<="			     { @S @Char "lessequal"	 }
    def ">="			     { @S @Char "greaterequal"	 }
    def ":="			     { :{//0.03fo &0.1f =}	 }

    def abort                        { @Keyword "abort"                }
    def abortsession          	     { @Keyword "abortsession"         }
    def abs                   	     { @Keyword "abs"                  }
    def absolute              	     { @Keyword "absolute"             }
    def access                	     { @Keyword "access"               }
    def accessible            	     { @Keyword "accessible"           }
    def access_lock           	     { @Keyword "access_lock"          }
    def account               	     { @Keyword "account"              }
    def acos                  	     { @Keyword "acos"                 }
    def acosh                 	     { @Keyword "acosh"                }
    def action                	     { @Keyword "action"               }
    def add                   	     { @Keyword "add"                  }
    def add_months            	     { @Keyword "add_months"           }
    def admin                 	     { @Keyword "admin"                }
    def after                 	     { @Keyword "after"                }
    def aggregate             	     { @Keyword "aggregate"            }
    def alias                 	     { @Keyword "alias"                }
    def all                   	     { @Keyword "all"                  }
    def allocate              	     { @Keyword "allocate"             }
    def allow                 	     { @Keyword "allow"                }
    def alter                 	     { @Keyword "alter"                }
    def alterand              	     { @Keyword "alterand"             }
    def amp                   	     { @Keyword "amp"                  }
    def analyse               	     { @Keyword "analyze"              }
    def and                   	     { @Keyword "and"                  }
    def ansidate              	     { @Keyword "ansidate"             }
    def any                   	     { @Keyword "any"                  }
    def are                   	     { @Keyword "are"                  }
    def array                 	     { @Keyword "array"                }
    def array_agg             	     { @Keyword "array_agg"            }
    def array_exists          	     { @Keyword "array_exists"         }
    def array_max_cardinality 	     { @Keyword "array_max_cardinality"}
    def as                    	     { @Keyword "as"                   }
    def asc                   	     { @Keyword "asc"                  }
    def asensitive            	     { @Keyword "asensitive"           }
    def asin                  	     { @Keyword "asin"                 }
    def asinh                 	     { @Keyword "asinh"                } 
    def assertion             	     { @Keyword "assertion"            }
    def associate             	     { @Keyword "associate"            }
    def asutime               	     { @Keyword "asutime"              }
    def asymmetric            	     { @Keyword "asymmetric"           }
    def at                    	     { @Keyword "at"                   }
    def atan                  	     { @Keyword "atan"                 }
    def atantwo               	     { @Keyword "atan2"                }
    def atanh                 	     { @Keyword "atanh"                }
    def atomic                	     { @Keyword "atomic"               }
    def audit                 	     { @Keyword "audit"                }
    def authorization        	     { @Keyword "authorization"        }    
    def aux                   	     { @Keyword "aux"                  } 
    def auxiliary             	     { @Keyword "auxiliary"            }
    def ave                   	     { @Keyword "ave"                  }
    def average               	     { @Keyword "average"              }
    def avg                   	     { @Keyword "avg"                  }

    
    def backup                       { @Keyword "backup"               } 
    def before                	     { @Keyword "before"               }
    def begin                 	     { @Keyword "begin"                }
    def begin_frame           	     { @Keyword "begin_frame"          }
    def begin_partition       	     { @Keyword "begin_partition"      }
    def between               	     { @Keyword "between"              }
    def bigint                	     { @Keyword "bigint"               }
    def binary                	     { @Keyword "binary"               }
    def bit                   	     { @Keyword "bit"                  }
    def blob                  	     { @Keyword "blob"                 }
    def boolean               	     { @Keyword "boolean"              }
    def both                  	     { @Keyword "both"                 }
    def breadth               	     { @Keyword "breadth"              }
    def break                 	     { @Keyword "break"                }
    def browse                	     { @Keyword "browse"               }
    def bt                    	     { @Keyword "bt"                   }
    def bufferpool            	     { @Keyword "bufferpool"           }
    def bulk                  	     { @Keyword "bulk"                 }
    def but                   	     { @Keyword "but"                  }
    def by                    	     { @Keyword "by"                   }
    def byte                  	     { @Keyword "byte"                 }
    def byteint               	     { @Keyword "byteint"              }
    def bytes                 	     { @Keyword "bytes"                }


    def call 			     { @Keyword "call"                 }
    def called			     { @Keyword "called"               }
    def capture 		     { @Keyword "captured"             }
    def cardinality		     { @Keyword "cardinality"          }
    def cascade 		     { @Keyword "cascade"              }
    def cascaded	             { @Keyword "cascaded"             }
    def case		      	     { @Keyword "case"                 }
    def casespecific	      	     { @Keyword "casespecific"         }
    def case_n		      	     { @Keyword "case_n"               }
    def cast		      	     { @Keyword "cast"                 }
    def catalog 		     { @Keyword "catalog"              }
    def ccsid		      	     { @Keyword "ccsid"                }
    def cd		      	     { @Keyword "cd"                   }
    def ceil		      	     { @Keyword "ceil"                 }
    def ceiling 		     { @Keyword "ceiling"              }
    def change		      	     { @Keyword "change"               }
    def char		      	     { @Keyword "char"                 }
    def chartwohexint	      	     { @Keyword "chartwohexint"        }
    def character	      	     { @Keyword "character"            }
    def characters	      	     { @Keyword "characters"           }
    def character_length      	     { @Keyword "character_length"     }
    def chars		      	     { @Keyword "chars"                }
    def char_length      	     { @Keyword "char_length"          }
    def check		      	     { @Keyword "check"                }
    def checkpoint	      	     { @Keyword "checkpoint"           }
    def class			     { @Keyword "class"                }
    def classifier	      	     { @Keyword "classifier"           }
    def clob		      	     { @Keyword "clob"                 }
    def clone		      	     { @Keyword "clone"                }
    def close		      	     { @Keyword "close"                }
    def cluster 		     { @Keyword "cluster"              }
    def clustered	      	     { @Keyword "clustered"            }
    def cm		      	     { @Keyword "cm"                   }
    def coalesce	      	     { @Keyword "coalesce"             }
    def collate 		     { @Keyword "collate"              }
    def collation	      	     { @Keyword "collation"            }
    def collect 		     { @Keyword "collect"              }
    def collection	      	     { @Keyword "collection"           }
    def collid		      	     { @Keyword "collid"               }
    def column		      	     { @Keyword "column"               }
    def column_value	      	     { @Keyword "column_value"         }
    def comment 		     { @Keyword "comment"              }
    def commit		      	     { @Keyword "commit"               }
    def completion	      	     { @Keyword "completion"           }
    def compress	      	     { @Keyword "compress"             }
    def compute 		     { @Keyword "compute"              }
    def concat		      	     { @Keyword "concat"               }
    def concurrently	      	     { @Keyword "concurrently"         }
    def condition	      	     { @Keyword "condition"            }
    def connect 		     { @Keyword "connect"              }
    def connection      	     { @Keyword "connection"           }
    def constraint	      	     { @Keyword "constraint"           }
    def constraints	      	     { @Keyword "constraints"          }
    def constructor	      	     { @Keyword "constructor"          }
    def contains	      	     { @Keyword "contains"             }
    def containstable	      	     { @Keyword "containstable"        }
    def content 		     { @Keyword "content"              }
    def continue	      	     { @Keyword "continue"             }
    def convert 		     { @Keyword "convert"              }
    def convert_table_header 	     { @Keyword "convert_table_header" }
    def copy		      	     { @Keyword "copy"                 }
    def corr		      	     { @Keyword "corr"                 }
    def corresponding	      	     { @Keyword "corresponding"        }
    def cos		      	     { @Keyword "cos"                  }
    def cosh		      	     { @Keyword "cosh"                 }
    def count		      	     { @Keyword "count"                }
    def covar_pop	             { @Keyword "covar_pop"            }
    def covar_samp	             { @Keyword "covar_samp"           }
    def create		             { @Keyword "create"               }
    def cross		             { @Keyword "cross"                }
    def cs		             { @Keyword "cs"                   }
    def csum		             { @Keyword "csum"                 }
    def ct		             { @Keyword "ct"                   }
    def cube		             { @Keyword "cube"                 }
    def cume_dist	             { @Keyword "cume_dist"            }
    def current 		     { @Keyword "current"              }
    def current_catalog 	     { @Keyword "current_catalog"      }
    def current_date	      	     { @Keyword "current_date"         }
    def current_default_transform_group  { @Keyword "current_default_transform_group" }
    def current_lc_type             { @Keyword "current_lc_type"      }
    def current_path	             { @Keyword "current_path"         }
    def current_role	             { @Keyword "current_role"         }
    def current_row	             { @Keyword "current_row"          }
    def current_schema	             { @Keyword "current_schema"       }
    def current_server	             { @Keyword "current_server"       }
    def current_time	             { @Keyword "current_time"         }
    def current_timestamp           { @Keyword "current_timestamp"    }
    def current_timezone            { @Keyword "current_timezone"     }
    def current_transform_group_for_type { @Keyword "current_transform_group_for_type" }
    def current_user                { @Keyword "current_user"         }
    def currval                     { @Keyword "currval"              }
    def cursor                      { @Keyword "cursor"               }
    def cv                          { @Keyword "cv"                   }
    def cycle                       { @Keyword "cycle"                }

    def data			     { @Keyword "data" 		         }
    def database		     { @Keyword "database" 		 }
    def databases		     { @Keyword "databases" 		 }
    def datablocksize		     { @Keyword "datablocksize" 	 }
    def date			     { @Keyword "date" 		 	 }
    def dateform		     { @Keyword "dateform" 		 }
    def day			     { @Keyword "day" 		 	 }
    def days			     { @Keyword "days" 		 	 }
    def day_hour		     { @Keyword "day_hour" 		 }
    def day_microsecond		     { @Keyword "day_microsecond" 	 }
    def day_minute		     { @Keyword "day_minute" 		 }
    def day_second		     { @Keyword "day_second" 		 }
    def dbcc			     { @Keyword "dbcc" 		 	 }
    def dbinfo			     { @Keyword "dbinfo" 		 }
    def deallocate		     { @Keyword "deallocate" 		 }
    def dec			     { @Keyword "dec" 		 	 }
    def decfloat		     { @Keyword "decfloat" 		 }
    def decimal			     { @Keyword "decimal" 		 }
    def declare			     { @Keyword "declare" 		 }
    def default			     { @Keyword "default" 		 }
    def deferrable		     { @Keyword "deferrable" 		 }
    def deferred		     { @Keyword "deferred" 		 }
    def define			     { @Keyword "define" 		 }
    def degrees			     { @Keyword "degrees" 		 }
    def del			     { @Keyword "del"			 }
    def delayed			     { @Keyword "delayed"		 }
    def delete			     { @Keyword "delete"		 }
    def delimiter		     { @Keyword "delimiter"		 }
    def dense_rank		     { @Keyword "dense_rank"		 }
    def	deny			     { @Keyword "deny"		 	 }
    def depth			     { @Keyword "depth"		 	 }
    def deref			     { @Keyword "deref"		 	 }
    def desc			     { @Keyword "desc"		 	 }
    def describe		     { @Keyword "describe"		 }
    def descriptor		     { @Keyword "descriptor"		 }
    def destroy			     { @Keyword "destroy"		 }
    def destructor		     { @Keyword "destructor"		 }
    def deterministic		     { @Keyword "deterministic"	 	 }
    def diagnostic		     { @Keyword "diagnostic"		 }
    def diagnostics		     { @Keyword "diagnostics"		 }
    def dictionary		     { @Keyword "dictionary"		 }
    def disable			     { @Keyword "disable"		 }
    def disabled		     { @Keyword "disabled"		 }
    def disallow		     { @Keyword "disallow"		 }
    def disconnect		     { @Keyword "disconnect"		 }
    def	disk			     { @Keyword "disk"		 	 }
    def distinct		     { @Keyword "distinct"		 }
    def distinctrow		     { @Keyword "distinctrow"		 }
    def distributed		     { @Keyword "distributed"		 }
    def div			     { @Keyword "div"			 }
    def do			     { @Keyword "do"			 }
    def document		     { @Keyword "document"		 }
    def domain			     { @Keyword "domain"		 }
    def double			     { @Keyword "double"		 }
    def drop			     { @Keyword "drop"		 	 }
    def dssize			     { @Keyword "dssize"		 }
    def dual			     { @Keyword "dual"		 	 }
    def dump			     { @Keyword "dump"		 	 }
    def dynamic			     { @Keyword "dynamic"		 }
    
    def each 			     { @Keyword "each"			 }
    def echo 			     { @Keyword "echo" 		 	 }
    def editproc		     { @Keyword "editproc" 		 }
    def element 		     { @Keyword "element" 		 }
    def else 			     { @Keyword "else" 		 	 }
    def elseif			     { @Keyword "elseif" 		 }
    def empty			     { @Keyword "empty" 		 }
    def enabled			     { @Keyword "enabled" 		 }
    def enclosed		     { @Keyword "enclosed" 		 }
    def encoding		     { @Keyword "encoding" 		 }
    def encryption		     { @Keyword "encryption" 		 }
    def end			     { @Keyword "end" 		 	 }
    def end_exec		     { @Keyword "end-exec" 		 }
    def ending			     { @Keyword "ending" 		 }
    def end_frame		     { @Keyword "end_frame" 		 }
    def end_partition		     { @Keyword "end_partition" 	 }
    def eq			     { @Keyword "eq" 			 }		 
    def equals			     { @Keyword "equals" 		 }
    def erase			     { @Keyword "erase" 		 }
    def errlvl			     { @Keyword "errlvl" 		 }
    def error			     { @Keyword "error" 		 }
    def errorfiles		     { @Keyword "errorfiles" 		 }
    def errortables		     { @Keyword "errortables" 	 	 }
    def escape			     { @Keyword "escape" 		 }
    def escaped			     { @Keyword "escaped" 		 }
    def et			     { @Keyword "et" 			 }
    def every			     { @Keyword "every" 		 }
    def except			     { @Keyword "except" 		 }
    def exception		     { @Keyword "exception" 		 }
    def exclusive		     { @Keyword "exclusive" 		 }
    def exec			     { @Keyword "exec" 		 	 }		 
    def execute			     { @Keyword "execute" 		 }
    def exists			     { @Keyword "exists" 		 }
    def exit			     { @Keyword "exit" 		 	 }
    def exp			     { @Keyword "exp" 		 	 }
    def explain			     { @Keyword "explain" 		 }
    def external		     { @Keyword "external" 		 }
    def extract                      { @Keyword "extract" 		 }

    def fallback		     { @Keyword "fallback" 		 }
    def false			     { @Keyword "false" 		 }
    def fastexport		     { @Keyword "fastexport" 		 }
    def fenced			     { @Keyword "fenced" 		 }
    def fetch			     { @Keyword "fetch" 		 }
    def fieldproc		     { @Keyword "fieldproc" 		 }
    def file			     { @Keyword "file" 			 }
    def fillfactor		     { @Keyword "fillfactor" 		 }
    def filter			     { @Keyword "filter" 		 }
    def final			     { @Keyword "final" 		 }
    def first			     { @Keyword "first" 		 }
    def first_value		     { @Keyword "first_value" 		 }
    def float			     { @Keyword "float" 		 }
    def floor			     { @Keyword "floor" 		 }
    def for			     { @Keyword "for" 			 }
    def force			     { @Keyword "force" 		 }
    def foreign			     { @Keyword "foreign" 		 }
    def format			     { @Keyword "format" 		 }
    def found			     { @Keyword "found" 		 }
    def frame_row		     { @Keyword "frame_row" 		 }
    def free			     { @Keyword "free" 			 }
    def freespace		     { @Keyword "freespace" 		 }
    def freetext		     { @Keyword "freetext" 		 }
    def freetexttable		     { @Keyword "freetexttable" 	 }
    def freeze			     { @Keyword "freeze" 		 }
    def from			     { @Keyword "from" 			 }
    def full			     { @Keyword "full" 			 }
    def fulltext		     { @Keyword "fulltext"		 }
    def function		     { @Keyword "function" 		 }
    def fusion			     { @Keyword "fusion" 		 }

    def ge                           { @Keyword "ge"                     }
    def general                      { @Keyword "general"                }
    def generated                    { @Keyword "generated"              }
    def get                          { @Keyword "get"                    }
    def give                         { @Keyword "give"                   }
    def global                       { @Keyword "global"                 }
    def go                           { @Keyword "go"                     }
    def goto                         { @Keyword "goto"                   }
    def grant                        { @Keyword "grant"                  }
    def graphic                      { @Keyword "graphic"                }
    def group                        { @Keyword "group"                  }
    def grouping                     { @Keyword "grouping"               }
    def groups                       { @Keyword "groups"                 }
    def gt                           { @Keyword "gt"                     }

    def handler                      { @Keyword "handler"                }
    def hash                         { @Keyword "hash"                   }
    def hashamp                      { @Keyword "hashamp"                }
    def hashbakamp                   { @Keyword "hashbakamp"             }
    def hashbucket                   { @Keyword "hashbucket"             }
    def hashrow                      { @Keyword "hashrow"                }
    def having                       { @Keyword "having"                 }
    def help                         { @Keyword "help"                   }
    def high_priority                { @Keyword "high_priority"          }
    def hold                         { @Keyword "hold"                   }
    def holdlock                     { @Keyword "holdlock"               }
    def host                         { @Keyword "host"                   }
    def hour                         { @Keyword "hour"                   }
    def hours                        { @Keyword "hours"                  }
    def hour_microsecond             { @Keyword "hour_microsecond"       }
    def hour_minute                  { @Keyword "hour_minute"            }
    def hour_second                  { @Keyword "hour_second"            }

    def if                           { @Keyword "if"                     }
    def ignore                       { @Keyword "ignore"                 }
    def ilike                        { @Keyword "ilike"                  }
    def immediate                    { @Keyword "immediate"              }
    def in                           { @Keyword "in"                     }
    def inclusive                    { @Keyword "inclusive"              }
    def inconsistent                 { @Keyword "inconsistent"           }
    def increment                    { @Keyword "increment"              }
    def index                        { @Keyword "index"                  }
    def indicator                    { @Keyword "indicator"              }
    def infile                       { @Keyword "infile"                 }
    def inherit                      { @Keyword "inherit"                }
    def initial                      { @Keyword "initial"                }
    def initialize                   { @Keyword "initialize"             }
    def initially                    { @Keyword "initially"              }
    def initiate                     { @Keyword "initiate"               }
    def inner                        { @Keyword "inner"                  }
    def inout                        { @Keyword "inout"                  }
    def input                        { @Keyword "input"                  }
    def ins                          { @Keyword "ins"                    }
    def insensitive                  { @Keyword "insensitive"            }
    def insert                       { @Keyword "insert"                 }
    def instead                      { @Keyword "instead"                }
    def int                          { @Keyword "int"                    }
    def integer                      { @Keyword "integer"                }
    def integerdate                  { @Keyword "integerdate"            }
    def intersect                    { @Keyword "intersect"              }
    def intersection                 { @Keyword "intersection"           }
    def interval                     { @Keyword "interval"               }
    def into                         { @Keyword "into"                   }
    def io_after_gtids               { @Keyword "io_after_gtids"         }
    def io_before_gtids              { @Keyword "io_before_gtids"        }
    def is                           { @Keyword "is"                     }
    def isnull                       { @Keyword "isnull"                 }
    def isobid                       { @Keyword "isobid"                 }
    def isolation                    { @Keyword "isolation"              }
    def iterate                      { @Keyword "iterate"                }

    def key			     { @Keyword "key"			 }
    
    def not			     { @Keyword "not"			 }
    def null			     { @Keyword "null"			 }

    def primary			     { @Keyword "primary"		 }
    
    def select                       { @Keyword "select"                 }

    def table			     { @Keyword "table"			 }
    
    def @Com right x                 { @R "--" x			 }

   Slope @Font lines @Break @Body

@End @Sql
